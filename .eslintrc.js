module.exports = {
    extends: [
        'eslint:recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
    ],
    env: {
        commonjs: true,
        node: true,
    },
    parser: '@typescript-eslint/parser',
    parserOptions: {
        ecmaVersion: 2019,
        sourceType: 'module',
        project: ['./tsconfig.json'],
        tsconfigRootDir: __dirname,
    },
    plugins: [
        '@typescript-eslint',
    ],
    rules: {
        '@typescript-eslint/comma-spacing': 'error',
        '@typescript-eslint/dot-notation': 'error',
        '@typescript-eslint/explicit-module-boundary-types': 'off',
        '@typescript-eslint/indent': 'error',
        '@typescript-eslint/no-empty-function': 'error',
        '@typescript-eslint/no-floating-promises': 'off',
        '@typescript-eslint/no-var-requires': 'off',
        '@typescript-eslint/quotes': ['error', 'single'],
        '@typescript-eslint/restrict-template-expressions': 'off',
        '@typescript-eslint/semi': ['error', 'always'],
        '@typescript-eslint/space-before-function-paren': ['error', {
            anonymous: 'never',
            named: 'never',
            asyncArrow: 'always',
        }],
        'comma-dangle': ['error', 'always-multiline'],
        'comma-spacing': 'off',
        'comma-style': 'error',
        'curly': ['error', 'multi-line', 'consistent'],
        'dot-location': 'off',
        'indent': 'off',
        'max-nested-callbacks': ['error', { 'max': 4 }],
        'max-statements-per-line': ['error', { 'max': 2 }],
        'no-console': 'off',
        'no-empty-function': 'off',
        'no-inline-comments': 'error',
        'no-lonely-if': 'error',
        'no-multi-spaces': 'error',
        'no-multiple-empty-lines': ['error', { max: 2, maxEOF: 1, maxBOF: 0 }],
        'no-shadow': ['error', { allow: ['err', 'resolve', 'reject'] }],
        'no-trailing-spaces': ['error'],
        'no-var': 'error',
        'object-curly-spacing': ['error', 'always'],
        'prefer-const': 'error',
        'quotes': 'off',
        'semi': 'off',
        'space-before-blocks': 'error',
        'space-before-function-paren': 'off',
        'space-in-parens': 'error',
        'space-infix-ops': 'error',
        'space-unary-ops': 'error',
        'spaced-comment': 'error',
    },
};
